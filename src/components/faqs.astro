---
import { readFileSync } from 'fs';
import { join } from 'path';
import matter from 'gray-matter';

interface FAQItem {
  question: string;
  answer: string;
}

// 直接讀取 faqs.md 文件
const faqsPath = join(process.cwd(), 'src/content/faqs.md');
let faqItems: FAQItem[] = [];
let faq = {
  data: {
    title: "Frequently Asked Questions",
    description: "Get answers to the most common questions about Dubai7 gaming platform"
  }
};

try {
  const faqsContent = readFileSync(faqsPath, 'utf-8');
  const { data, content } = matter(faqsContent);

  // 解析 FAQ 內容
  if (content) {
    faqItems = content.split('##').slice(1).map((item: string) => {
      const parts = item.split('\n\n');
      const question = parts[0]?.trim() || '';
      const answer = parts[1]?.trim() || '';
      return { question, answer };
    }).filter(item => item.question && item.answer);
  }

  if (data) {
    faq = {
      data: {
        title: data.title || faq.data.title,
        description: data.description || faq.data.description
      }
    };
  }
} catch (error) {
  console.error('Error reading FAQ content:', error);
}
---

<section class="py-20" id="faq">
    <div class="container mx-auto px-3 xs:px-4">
      <div class="text-center mb-12 xs:mb-16">
        <h2 class="text-2xl xs:text-3xl md:text-5xl font-display font-bold mb-3 xs:mb-4 text-gradient">
          {faq.data.title}
        </h2>
        <p class="text-base xs:text-lg text-gray-300 max-w-2xl mx-auto px-2 xs:px-0">
          {faq.data.description}
        </p>
      </div>

      <div class="max-w-3xl mx-auto space-y-4">
        {faqItems.map((item: FAQItem) => (
          <div class="faq-item bg-gray-900 border border-gray-700 rounded-lg">
            <button class="faq-question w-full text-left p-4 xs:p-6 flex justify-between items-center hover:bg-gray-800 transition-colors">
              <span class="text-base xs:text-lg font-semibold">{item.question}</span>
              <span class="faq-icon text-primary-400 text-xl">+</span>
            </button>
            <div class="faq-answer hidden p-4 xs:p-6 pt-0 border-t border-gray-700">
              <p class="text-sm xs:text-base text-gray-300">{item.answer}</p>
            </div>
          </div>
        ))}
      </div>

      <div class="text-center mt-8 xs:mt-12">
        <p class="text-sm text-gray-400 mb-4">Still have questions?</p>
        <a href="/contact" class="btn-primary text-sm xs:text-base px-6 py-3">Contact Support</a>
      </div>
    </div>
</section>

<script>
  // 等待 DOM 加載完成
  document.addEventListener('DOMContentLoaded', () => {
    // 獲取所有 FAQ 問題按鈕
    const faqButtons = document.querySelectorAll('.faq-question');
    
    // 為每個按鈕添加點擊事件
    faqButtons.forEach(button => {
      button.addEventListener('click', () => {
        // 獲取當前 FAQ 項目的答案部分
        const answer = button.nextElementSibling as HTMLElement;
        const icon = button.querySelector('.faq-icon') as HTMLElement;
        
        // 確保元素存在
        if (answer && icon) {
          // 切換答案的顯示狀態
          answer.classList.toggle('hidden');
          
          // 切換圖標
          if (answer.classList.contains('hidden')) {
            icon.textContent = '+';
          } else {
            icon.textContent = '−';
          }
        }
      });
    });
  });
</script>

<style>
  /* 添加過渡效果 */
  .faq-answer {
    transition: all 0.3s ease-in-out;
  }
  
  .faq-icon {
    transition: transform 0.3s ease;
  }
  
  .faq-question:hover .faq-icon {
    transform: scale(1.1);
  }
</style>